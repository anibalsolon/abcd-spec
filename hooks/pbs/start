#!/bin/bash

#I don't want not finding any #PBS to fail
#set -e
#set -o pipefail

#pbs doesn't keep finished job long enough for amaretti to query its exit code..
#to be absolutely sure that I can catch the exit code, I need to create a script that wraps the main.
#but, if we do that, we get rid of all #PBS options that user might be setting inside main..
#so create a fake submit script by pulling all #.. and call the original main and capture exit-code

rm -f exit-code

echo "#!/bin/bash" > _main

#inject headers generated by jobheader.sh 
[ -f jobheader.sh ] && bash ./jobheader.sh >> _main

#copy all #PBS headers
grep --regexp="^#PBS" main >> _main

#singularity may fails to remove runtime directory (if cleanupd is killed by cluster)
#create /tmp sub directory for singularity to contain cachedir
#echo "mkdir /tmp/\$PBS_JOBID" >> _main
#echo "export SINGULARITY_LOCALCACHEDIR=/tmp/\$PBS_JOBID" >> _main

#TODO - should let each cluster set this via PBS_EXTRA?
echo "export SINGULARITY_LOCALCACHEDIR=\$TMPDIR" >> _main

#output git SHA
#echo "echo \"git sha:\" \$(git rev-parse HEAD)" >> _main

echo $PBS_EXTRA >> _main

rm -f _smon.out
echo "smon &" >> _main
echo "smonpid=\$!" >> _main

if [ ! -z "$CRAYOS_VERSION" ]; then
	#running on cray.. let's add ccmrun related things
	echo "#PBS -l gres=ccm -q gpu" >> _main
	echo "module load ccm" >> _main
	echo "ccmrun ./main" >> _main
else
	echo "./main" >> _main
fi
echo "echo \$? > exit-code" >> _main
chmod +x main #in case user fogets it

echo "kill \$smonpid" >> _main

#HOOK_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
#qsub -l epilogue=$HOOK_DIR/cleantmp.sh -d $PWD -V -o \$PBS_JOBID.log -e \$PBS_JOBID.err _main > jobid
echo "submitting to batch scheduler"
qsub -d $PWD -V -o \$PBS_JOBID.log -e \$PBS_JOBID.err _main > jobid

