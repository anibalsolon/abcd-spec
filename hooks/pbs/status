#!/bin/bash

#return code 0 = running
#return code 1 = finished successfully
#return code 2 = failed
#return code 3 = unknown (retry later)

if [ ! -z $BRAINLIFE_LOCAL_VALIDATOR ] && [[ "$SERVICE" = brainlife/validator* ]]; then
        `dirname $0`/../direct/status
        exit $?
fi

if [ ! -f jobid ];then
	echo "no jobid - not yet submitted?"
	exit 3
fi

if [ -f exit-code ]
then
	code=$(cat exit-code)
	if [ $code -eq 0 ]; then
		echo "finished successfully"
		exit 1
	fi
	echo "finished with exit code $code"
	exit 2
fi

jobid=`cat jobid`
if [ -z $jobid ]; then
	echo "jobid is empty.. failed to submit?"
	exit 3
fi

jobstate=`qstat -f $jobid | grep job_state | cut -b17`
if [ -z $jobstate ]; then
	echo "Job removed before completing - maybe timed out?"
	exit 2
fi

case "$jobstate" in
Q)
	timeout 1 showstart $jobid | grep start
	exit 0
	;;
R)
    if [ -f log.sh ]; then
        bash ./log.sh
    else
        #get last line of last log touched
        logfile=$(ls -rt *.log | tail -1)
	tail -10 $logfile | grep -v -e '^$' | tail -1 #don't show empty last line
    fi
    exit 0
	;;
E)
	echo "job is exiting after having run.. waiting"
	exit 0
	;;
T)
	echo "job is moving to new location.. waiting"
	exit 0
	;;
H)
	echo "Job held.. waiting"
	exit 0
	;;
C)
	exit_status=`qstat -f $jobid | grep exit_status | cut -d'=' -f2 | xargs`
	if [ ! $exit_status ]; then
        echo "removed before started?"
        exit 2
    fi
    if [ $exit_status -eq 0 ]; then	
		echo "finished with code 0"
		exit 1
	else
		#get last line of last err log touched
		logfile=$(ls -rt *.err | tail -1)
		tail -10 $logfile | grep -v -e '^$' | tail -1 #don't show empty last line
		echo "failed with code $exit_status"
		exit 2
	fi
	;;
*)	
	echo "unknown job status $jobstate"
	exit 2
	;;

esac
	
