#!/bin/bash

#return code 0 = running
#return code 1 = finished successfully
#return code 2 = failed
#return code 3 = unknown (retry later)

if [ ! -f jobid ];then
	echo "no jobid - not yet submitted?"
	exit 1
fi

if [ -f exit-code ]
then
    code=$(cat exit-code)
    if [ $code -eq 0 ]; then
        echo "finished successfully"
        exit 1
    fi
    echo "finished with exit code $code"
    exit 2
fi

jobid=`cat jobid`
if [ -z $jobid ]; then
	echo "jobid is empty.. failed to submit?"
	exit 3
fi

jobstate=`scontrol show job $jobid | grep JobState | cut -f4 -d' ' | cut -f2 -d'='`
if [ -z $jobstate ]; then
	echo "no job state.. odd"
	exit 2
fi

#TODO .. I need to handle all slurm states such as
#PENDING, RUNNING, SUSPENDED, CANCELLED, COMPLETING, COMPLETED, CONFIGURING, FAILED, TIMEOUT, PREEMPTED, NODE_FAIL, REVOKED and SPECIAL_EXIT

if [ $jobstate == "PENDING" ]; then
        eststart=`timeout 1 squeue -h -o "%S" -j $jobid`
        echo "Waiting in the queue - estimated start time: $eststart"
	#curl -X POST -H "Content-Type: application/json" -d "{\"msg\":\"Waiting in the PBS queue : $eststart\"}" $PROGRESS_URL
	exit 0
fi
if [ $jobstate == "RUNNING" ]; then
    logname="slurm-$jobid.log"
    if [ -z $logname ]; then
        echo "(empty log)"
    elif [ -f $logname ]; then
        tail -1 $logname
    else 
        echo "Running"
    fi
    exit 0
fi

echo $jobstate
if [ $jobstate == "COMPLETEING" ]; then
	exit 0
fi
if [ $jobstate == "CONFIGURING" ]; then
	exit 0
fi
if [ $jobstate == "COMPLETING" ]; then
	exit 0
fi
if [ $jobstate == "REQUEUE_HOLD" ]; then
	echo "Requeue Hold"
	exit 0 
fi

if [ $jobstate == "COMPLETED" ]; then
	exit 1
fi

if [ $jobstate == "CANCELLED" ]; then
	exit 2
fi
if [ $jobstate == "NODE_FAIL" ]; then
	exit 2
fi
if [ $jobstate == "TIMEOUT" ]; then
	exit 2
fi
if [ $jobstate == "FAILED" ]; then
	echo "Job failed"
	exit 2
fi
echo "unknown state: $jobstate"
exit 3

